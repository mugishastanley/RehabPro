import sys
import numpy as np
import math

IKPI = 3.14159265358979
IK2PI = IKPI * 2

ZERO_THRESH = 0.00000001
#define SIGN(x) ( ( (x) > 0 ) - ( (x) < 0 ) )
def SIGN(x):
    #print(sign(4.0))
    if(x >= 0.0):
        a=1.0
    else:
        a=-1.0
    return a
#define PI M_PI


#define UR5_PARAMS
d1 = 0.089159
a2 = -0.42500
a3 = -0.39225
d4 = 0.10915
d5 = 0.09465
d6 = 0.0823

def forward(q,T):
    """
    @param q       The 6 joint values
    @param T       The 4x4 end effector pose in row-major ordering

    Test Example
    q = [0.0, 0.0, 1.0, 0.0, 1.0, 0.0]
    T = [None] * 16
    forward(q, T)
    for i in range(0,4):
        for j in range(i*4,(i+1)*4):
            print("%1.3f ", T[j])
        print("\n")
    """
    qcounter = 0
    Tcounter = 0
    s1 = np.sin(q[qcounter])
    c1 = np.cos(q[qcounter])
    qcounter += 1

    q234 = q[qcounter]
    s2= np.sin(q[qcounter])
    c2= np.cos(q[qcounter])
    qcounter +=1

    s3 = np.sin(q[qcounter])
    c3= np.cos(q[qcounter])
    q234 += q[qcounter]
    qcounter +=1

    q234 += q[qcounter]
    qcounter +=1

    s5 = np.sin(q[qcounter])
    c5= np.cos(q[qcounter])
    qcounter +=1

    s6= np.sin(q[qcounter])
    c6= np.cos(q[qcounter])
    s234= np.sin(q234)
    c234=np.cos(q234)

    q= ((c1*c234-s1*s234)*s5)/2.0 - c5*s1 + ((c1*c234+s1*s234)*s5)/2

    T[Tcounter] = (c6*(s1*s5 + ((c1*c234-s1*s234)*c5)/2.0 + ((c1*c234+s1*s234)*c5)/2.0) -\
          (s6*((s1*c234+c1*s234) - (s1*c234-c1*s234)))/2.0)
    Tcounter+=1 #//nx

    T[Tcounter] = (-(c6*((s1*c234+c1*s234) - (s1*c234-c1*s234)))/2.0 -\
          s6*(s1*s5 + ((c1*c234-s1*s234)*c5)/2.0 + ((c1*c234+s1*s234)*c5)/2.0))
    Tcounter+=1 #//ox


    T[Tcounter]=   c5*s1 - ((c1*c234-s1*s234)*s5)/2.0 -((c1*c234-s1*s234)*s5)/2.0
    Tcounter+=1 #//ax

    T[Tcounter] = -(d5*(s1*c234-c1*s234))/2.0 + (d5*(s1*c234+c1*s234))/2.0 +\
    d4*s1 - (d6*(c1*c234-s1*s234)*s5)/2.0 - (d6*(c1*c234+s1*s234)*s5)/2.0 +\
    a2*c1*c2 + d6*c5*s1 + a3*c1*c2*c3 - a3*c1*s2*s3
    Tcounter+=1 # //px

    T[Tcounter] = (c6*(((s1*c234+c1*s234)*c5)/2.0 - c1*s5 + ((s1*c234-c1*s234)*c5)/2.0) +\
          s6*((c1*c234-s1*s234)/2.0 - (c1*c234+s1*s234)/2.0))
    Tcounter+=1 #//ny

    T[Tcounter] = (c6*((c1*c234-s1*s234)/2.0 - (c1*c234+s1*s234)/2.0) -\
          s6*(((s1*c234+c1*s234)*c5)/2.0 - c1*s5 + ((s1*c234-c1*s234)*c5)/2.0))
    Tcounter+=1# //oy

    T[Tcounter] = -c1*c5 -((s1*c234+c1*s234)*s5)/2.0 + ((c1*s234-s1*c234)*s5)/2.0
    Tcounter+=1 #//ay

    T[Tcounter] = -(d5*(c1*c234-s1*s234))/2.0 + (d5*(c1*c234+s1*s234))/2.0 - d4*c1 -\
    (d6*(s1*c234+c1*s234)*s5)/2.0 - (d6*(s1*c234-c1*s234)*s5)/2.0 - d6*c1*c5 +\
    a2*c2*s1 + a3*c2*c3*s1 - a3*s1*s2*s3
    Tcounter+=1 # //py


    T[Tcounter] = ((s234*c6+c234*s6)/2.0 + s234*c5*c6-(s234*c6-c234*s6)/2.0)
    Tcounter+=1 #//nz

    T[Tcounter] = ((c234*c6+s234*s6)/2.0 + (c234*c6-s234*s6)/2.0 - s234*c5*s6 )
    Tcounter+=1 # oz

    T[Tcounter] = ((c234*c5-s234*s5)/2.0 - (c234*c5+s234*s5)/2.0)
    Tcounter+=1 # //az

    T[Tcounter] = (d1 + (d6*(c234*c5-s234*s5))/2.0 + a3*(s2*c3+c2*s3) + a2*s2 -\
    (d6*(c234*c5+s234*s5))/2.0 - d5*c234)
    Tcounter+=1; #//pz
    T[Tcounter] = 0.0
    Tcounter+=1
    T[Tcounter] = 0.0
    Tcounter+=1
    T[Tcounter] = 0.0
    Tcounter+=1
    T[Tcounter] = 1.0



    #sp1
  points[0][0]=1.8315485441;
  points[0][1]=-0.978780658977778;
  points[0][2]=1.55142319501667;
  points[0][3]=-0.471937036711111;
  points[0][4]=1.98618471811111;
  points[0][5]=0.533547160216667;
  //sp2=0;
  points[1][0]=1.56817835608333;
  points[1][1]=-1.38736224290556;
  points[1][2]=2.11254655782222;
  points[1][3]=-0.472111569638889;
  points[1][4]=1.98618471811111;
  points[1][5]=0.533547160216667;
  //sp3=0;
  points[2][0]=1.02625361533333;
  points[2][1]=-1.76051364249444;
  points[2][2]=2.48988674767778;
  points[2][3]=-0.471937036711111;
  points[2][4]=1.98618471811111;
  points[2][5]=0.533547160216667;
  //sp4=0;
  points[3][0]=-0.500036838083333;
  points[3][1]=-1.76278257055556;
  points[3][2]=2.59006864822222;
  points[3][3]=-0.701273303811111;
  points[3][4]=0.2450442306;
  points[3][5]=0.533547160216667;
  //sp5=0;
  points[4][0]=-0.6660176524;
  points[4][1]=-1.27845369597222;
  points[4][2]=2.07467291249444;
  points[4][3]=-0.8293804728;
  points[4][4]=0.0719075662444444;
  points[4][5]=0.533547160216667;
  //sp6=0;
  points[5][0]=-0.716108602672222;
  points[5][1]=-0.882613015772222;
  points[5][2]=1.47043991652778;
  points[5][3]=-1.06098566796111;
  points[5][4]=0.0752236918722222;
  points[5][5]=0.533547160216667;
  //sp7=0;
  points[6][0]=1.63467540156667;
  points[6][1]=-1.65195416141667;
  points[6][2]=1.80170341345;
  points[6][3]=-0.240157308622222;
  points[6][4]=2.23559227190556;
  points[6][5]=0.533547160216667;
  //sp8=0;
  points[7][0]=0.9330530319;
  points[7][1]=-2.12336759934444;
  points[7][2]=2.10277271386667;
  points[7][3]=-0.0150098317888889;
  points[7][4]=1.79664195854444;
  points[7][5]=0.533547160216667;
  //sp9=0;
  points[8][0]=-0.461115995188889;
  points[8][1]=-2.14134449090556;
  points[8][2]=2.11324468953333;
  points[8][3]=-0.106988684727778;
  points[8][4]=0.308399683383333;
  points[8][5]=0.533547160216667;
  //sp10=0;
  points[9][0]=-0.660083532855556;
  points[9][1]=-1.61233518681111;
  points[9][2]=1.73398463747222;
  points[9][3]=-0.0724311650277778;
  points[9][4]=0.298276773572222;
  points[9][5]=0.533547160216667;
  //sp11=0;
  points[10][0]=0.776496995683333;
  points[10][1]=-2.010619328;
  points[10][2]=1.42279242724444;
  points[10][3]=0.4649557196;
  points[10][4]=1.46031700671667;
  points[10][5]=0.533547160216667;
  //sp12=0;
  points[11][0]=-0.261101259955556;
  points[11][1]=-1.90520143962222;
  points[11][2]=1.24354711041667;
  points[11][3]=0.877900626722222;
  points[11][4]=0.898146446344445;
  points[11][5]=0.533372627288889;
  //p1=;
  points[12][0]=1.77465080964444;
  points[12][1]=-0.368264477611111;
  points[12][2]=0.952426186883333;
  points[12][3]=-1.08140602051111;
  points[12][4]=2.13453770672222;
  points[12][5]=0.533547160216667;
  //p2=;
  points[13][0]=1.57166901463889;
  points[13][1]=-0.774926199333333;
  points[13][2]=1.70064884826667;
  points[13][3]=-1.08140602051111;
  points[13][4]=2.13453770672222;
  points[13][5]=0.533547160216667;
  //p3=;
  points[14][0]=1.22557021885556;
  points[14][1]=-1.01089471768889;
  points[14][2]=2.12982531767222;
  points[14][3]=-1.08158055343889;
  points[14][4]=2.13453770672222;
  points[14][5]=0.533547160216667;
  //p4=;
  points[15][0]=0.452214815872222;
  points[15][1]=-1.16657808926667;
  points[15][2]=2.38726138614444;
  points[15][3]=-1.08175508636667;
  points[15][4]=1.31772360472222;
  points[15][5]=0.533547160216667;
  //p5=0;
  points[16][0]=-0.169296939944444;
  points[16][1]=-1.02468281898333;
  points[16][2]=2.18689758505556;
  points[16][3]=-1.18560217839444;
  points[16][4]=0.654149413311111;
  points[16][5]=0.533547160216667;
  //p6=0;
  points[17][0]=-0.390081093583333;
  points[17][1]=-0.782431115227778;
  points[17][2]=1.73136664355556;
  points[17][3]=-1.18507857961111;
  points[17][4]=0.654149413311111;
  points[17][5]=0.533547160216667;
  //p7=0;
  points[18][0]=-0.504400161277778;
  points[18][1]=-0.386590435027778;
  points[18][2]=0.958534839355556;
  points[18][3]=-1.10933128895556;
  points[18][4]=0.654149413311111;
  points[18][5]=0.533547160216667;
  //p8=0;
  points[19][0]=1.56241876946667;
  points[19][1]=-1.15017199405556;
  points[19][2]=1.56206970361111;
  points[19][3]=-0.587128769044444;
  points[19][4]=2.09020634306667;
  points[19][5]=0.533547160216667;
  //p9=0;
  points[20][0]=1.21684357246667;
  points[20][1]=-1.47375604215556;
  points[20][2]=1.86907312357222;
  points[20][3]=-0.231605195161111;
  points[20][4]=2.09055540892222;
  points[20][5]=0.533547160216667;
  //p10=0;
  points[21][0]=0.627271342433333;
  points[21][1]=-1.6776105018;
  points[21][2]=2.08636661865556;
  points[21][3]=-0.305956222394444;
  points[21][4]=1.85319062714444;
  points[21][5]=0.533547160216667;
  //p11=0;
  points[22][0]=-0.168947874088889;
  points[22][1]=-1.51826193873889;
  points[22][2]=1.98793004738889;
  points[22][3]=-0.534245291927778;
  points[22][4]=0.650658754755556;
  points[22][5]=0.533547160216667;
  //p12=0;
  points[23][0]=-0.3989822729;
  points[23][1]=-1.14144534766667;
  points[23][2]=1.54130028520556;
  points[23][3]=-0.628493072927778;
  points[23][4]=0.576133194594444;
  points[23][5]=0.533547160216667;
  //p13=0;
  points[24][0]=1.04946649472778;
  points[24][1]=-1.67778503472778;
  points[24][2]=1.53693696201111;
  points[24][3]=-0.0268780708777778;
  points[24][4]=1.49260559835556;
  points[24][5]=0.533547160216667;
  //p14=0;
  points[25][0]=0.500385903938889;
  points[25][1]=-1.78826437801111;
  points[25][2]=1.55177226087222;
  points[25][3]=0.278380019805556;
  points[25][4]=1.45909527622222;
  points[25][5]=0.533547160216667;
  //p15=0;
  points[26][0]=-0.0743510272333333;
  points[26][1]=-1.66347333465;
  points[26][2]=1.48457708367778;
  points[26][3]=0.112922804272222;
  points[26][4]=1.10165184013333;
  points[26][5]=0.533547160216667;
  //p16=0;
  points[27][0]=0.429874601116667;
  points[27][1]=-1.59645269038333;
  points[27][2]=0.808087455611111;
  points[27][3]=0.470889839144444;
  points[27][4]=1.22923541033889;
  points[27][5]=0.533547160216667;
